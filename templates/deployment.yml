apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name }}
  namespace: {{ .Values.namespace }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.name }}
    spec:
      containers:
        - name: {{ .Values.name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{ - if .Values.image.args }}
          args: ['-c','config_file=/etc/postgresql/postgresql.conf']
          {{ - end }}
          {{- if .Values.ports }}
          ports:
          {{- range .Values.ports  }}
            - containerPort: {{ . }}
          {{- end }}
          {{- end }}
          {{- if .Values.env }}
          env:
          {{- range .Values.env }}
            - name: {{ .name }}
              value: {{ .value }}
          {{- end }}
          {{- end }}
          {{- if or .Values.volumes .Values.configMounts }}
          volumeMounts:
          {{- range .Values.volumes }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
          {{- end }}
          {{- range .Values.configMounts }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
              {{- if .subPath }}
              subPath: {{ .subPath }}
              {{- end }}
              {{- if .readOnly }}
              readOnly: true
              {{- end }}
          {{- end }}
          securityContext:
            runAsUser: {{ .Values.runAsUser }}
          {{- end }}
      {{- if or .Values.volumes .Values.configMounts }}
      volumes:
      {{- range .Values.volumes }}
        - name: {{ .name }}
          hostPath:
            path: {{ .hostPath }}
            type: DirectoryOrCreate
      {{- end }}
      {{- range .Values.configMounts }}
        - name: {{ .name }}
          configMap:
            name: {{ .configMap }}
      {{- end }}
      {{- end }}