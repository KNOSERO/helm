@Library('jenkins_shared_lib') _

pipeline {
    agent {
        label 'k3s'
    }
    options {
        skipDefaultCheckout();
        timestamps();
        ansiColor('xterm')
    }
    environment {
        DEFAULT_BRANCH = 'master'
        CREDITS_ID = 'github-token'
    }
    stages {
        stage('Init ENV') {
            steps {
                script {
                    initEnv()
                }
            }
        }

        stage('Configure Triggers') {
            steps {
                script {
                    configureTriggers()
                }
            }
        }

        stage('Checkout') {
            parallel {
                stage('Checkout PR') {
                    when { expression { isPullRequestBuild() } }
                    steps {
                         checkoutPullRequest()
                    }
                }

                stage('Checkout Manual') {
                    when { not { expression { isPullRequestBuild() } } }
                    steps {
                        checkoutBranch("*/${env.DEFAULT_BRANCH}")
                    }
                }
            }
        }

        stage('Init') {
            parallel {
                stage('Init Pipeline Status') {
                    when { expression { isPullRequestBuild() } }
                    steps {
                        script {
                            githubWebhook('PENDING', 'Pipeline started')
                        }
                    }
                }

                stage('Init Submodules') {
                    steps {
                        script {
                            initSubmodules()
                        }
                    }
                }

                stage('Init K3s config') {
                    steps {
                        script {
                            configureK3s()
                        }
                    }
                }

                stage('Config Prepare') {
                    steps {
                        script {
                            def homeconfig = "name: \"home\""
                            writeFile file: 'config/home.yml', text: homeconfig
                            def testconfig = "name: \"test\""
                            writeFile file: 'config/test.yml', text: testconfig
                        }
                    }
                }
            }
        }

        stage('Test') {
            parallel {
                stage('Test Helm Example 1') {
                    steps {
                        script {
                            sh '''
                                helm lint . -f values/example1.yml
                                helm template . --debug -f values/example1.yml
                                helm template . -f values/example2.yml
                            '''
                        }
                    }
                }
                stage('Test Helm Example 2') {
                    steps {
                        script {
                            sh '''
                                helm lint . -f values/example2.yml
                                helm template . --debug -f values/example2.yml
                                helm template . -f values/example2.yml
                            '''
                        }
                    }
                }
                stage('Test Helm Example 3') {
                    steps {
                        script {
                            sh '''
                                helm lint . -f values/example3.yml
                                helm template . --debug -f values/example3.yml
                                helm template . -f values/example2.yml
                            '''
                        }
                    }
                }
            }
        }
        stage('Dry Run') {
            parallel {
                stage('Test Helm Example 1') {
                    steps {
                        script {
                            withKubeConfig([credentialsId: 'jenkins-k3s']) {
                                sh '''
                                    helm install test-release1 . \
                                        -f values/example1.yml \
                                        --kubeconfig kubeconfig.yaml \
                                        --dry-run --debug
                                '''
                            }
                        }
                    }
                }
                stage('Test Helm Example 2') {
                    steps {
                        script {
                            withKubeConfig([credentialsId: 'jenkins-k3s']) {
                                sh '''
                                    helm install test-release1 . \
                                        -f values/example2.yml \
                                        --kubeconfig kubeconfig.yaml \
                                        --dry-run --debug
                                '''
                            }
                        }
                    }
                }
                stage('Test Helm Example 3') {
                    steps {
                        script {
                            withKubeConfig([credentialsId: 'jenkins-k3s']) {
                                sh '''
                                    helm install test-release1 . \
                                        -f values/example3.yml \
                                        --kubeconfig kubeconfig.yaml \
                                        --dry-run --debug
                                '''
                            }
                        }
                    }
                }
            }
        }
    }
    post {
        success {
            script {
                githubWebhook('SUCCESS', 'All stages passed ✅')
            }
        }
        failure {
            script {
                githubWebhook('FAILURE', 'Pipeline failed ❌')
            }
        }
    }
}